/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.exampro.view;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import lk.ijse.exampro.controller.ManageQuestionController;
import lk.ijse.exampro.controller.ManageResultController;
import lk.ijse.exampro.dto.ExaminationDTO;
import lk.ijse.exampro.dto.QuestionDTO;
import lk.ijse.exampro.dto.RegistrationDTO;
import lk.ijse.exampro.dto.ResultDTO;
import lk.ijse.exampro.dto.SubjectsDTO;

/**
 *
 * @author Hafees
 */
public class StartExamNew extends javax.swing.JFrame {
    private boolean threadStop=false;
   // private int stopthread=60*1000;
    
    int seconds=60,minute=59,hour=1;
    private Timer t;
    private int timercount;
    private ButtonGroup group1;
    private String answercorrectOrwrong="",studentanswer;
    private int count,current,currentanswer, questionNo,id,markedAnswers,displayanswer,timerstart;
    HashMap<Integer, QuestionDTO>hashMap=new HashMap<>();
    HashMap<Integer, Integer>hashMapmarkedAnswers=new HashMap<>();
    Set<String>attemtedQuestion=new HashSet<>();
    Set<String>correctanswer=new HashSet<>();
    Set<String>wronganswer=new HashSet<>();
    HashMap<Integer, String>hashMapstudentanswers=new HashMap<>();
    RegistrationDTO regdto;
    ExaminationDTO examdto;
    /**
     * Creates new form StartExam
     */
    public StartExamNew(int id) {
        initComponents();
        this.id=id;
        //txtsubid.setText(Integer.toString(id));
        //txtsubid.setText(Integer.toString(id));
        loadQuestions();
        jRadioButton4.setVisible(false);
        jRadioButton1.setVisible(false);
        jRadioButton2.setVisible(false);
        jRadioButton3.setVisible(false);
        //btnSave.setText("Start");
        lblyouranswer.setVisible(false);
       // lblyouranswer_diplay.setVisible(false);
        btnSave.setEnabled(false);
        btnSave.setVisible(false);
        btnload.setText("Load Question");
        btnshowallanswers.setEnabled(false);
        btnshowallanswers.setVisible(false);
        lblcorrectanswer.setVisible(false);
        lblyouranswer.setVisible(false);
        btnsubmit.setVisible(false);
        btnsubmit.setEnabled(false);
       buttonsetvisiblefalse();
      
    }

    private StartExamNew() {
      
    }

    StartExamNew(RegistrationDTO regdto, ExaminationDTO examdto) {
         initComponents();
        this.regdto=regdto;
        this.examdto=examdto;
        this.id=this.examdto.getSubjectsDTO().getSubid();
        jLabel12.setText(Integer.toString(id));
        loadQuestions();
        jRadioButton4.setVisible(false);
        jRadioButton1.setVisible(false);
        jRadioButton2.setVisible(false);
        jRadioButton3.setVisible(false);
        //btnSave.setText("Start");
        lblyouranswer.setVisible(false);
       // lblyouranswer_diplay.setVisible(false);
        btnSave.setEnabled(false);
        btnSave.setVisible(false);
        btnload.setText("Load Question");
        btnshowallanswers.setEnabled(false);
        btnshowallanswers.setVisible(false);
        lblcorrectanswer.setVisible(false);
        lblyouranswer.setVisible(false);
        btnsubmit.setVisible(false);
        btnsubmit.setEnabled(false);
      
       buttonsetvisiblefalse();
      loadfields();
      lblriviewanswers.setVisible(false);
      //timer();
      //startTimer();
      
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        pnlmain = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lbltimer = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        btn10 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        lblmarks = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        lblquestiontag = new javax.swing.JLabel();
        lblquestion = new javax.swing.JLabel();
        lblnumber = new javax.swing.JLabel();
        lblselectcorrectanswers = new javax.swing.JLabel();
        lblyouranswer = new javax.swing.JLabel();
        lblyouranswer_diplay = new javax.swing.JLabel();
        lblcorrecranswer_diplay = new javax.swing.JLabel();
        lblcorrectanswer = new javax.swing.JLabel();
        lblriviewanswers = new javax.swing.JLabel();
        pnlheader = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lblexid = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        pnlfooter = new javax.swing.JPanel();
        btnfinish = new javax.swing.JButton();
        btnshowallanswers = new javax.swing.JButton();
        btnsubmit = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnload = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlmain.setBackground(new java.awt.Color(255, 255, 255));
        pnlmain.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel6.setBackground(new java.awt.Color(204, 204, 204));
        jPanel6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 153), 1, true));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setBackground(new java.awt.Color(255, 255, 102));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Entypo_f600(0)_64_1.png"))); // NOI18N
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jPanel6.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 0, 87, 40));

        jLabel3.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        jLabel3.setText("Not  Attempted - ");
        jPanel6.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 10, -1, -1));

        jButton1.setBackground(new java.awt.Color(51, 255, 51));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Entypo_f600(0)_64.png"))); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jPanel6.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 0, 70, 42));

        jLabel4.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        jLabel4.setText("Attemted  -");
        jPanel6.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, 140, 26));

        jLabel2.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel2.setText("Total  Duration-5  minutes");
        jPanel6.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 10, 250, 30));

        jLabel14.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Time Left :");
        jPanel6.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 110, 30));

        lbltimer.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        lbltimer.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel6.add(lbltimer, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 190, 30));

        jLabel10.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel10.setText("Total Questions-10");
        jPanel6.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 10, 210, 30));

        pnlmain.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 2, 1430, 50));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 153), 1, true));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        btn10.setBackground(new java.awt.Color(0, 51, 255));
        btn10.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        btn10.setForeground(new java.awt.Color(255, 255, 255));
        btn10.setText("10");
        btn10.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        btn10.setContentAreaFilled(false);
        btn10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn10.setOpaque(true);
        btn10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn10ActionPerformed(evt);
            }
        });

        btn9.setBackground(new java.awt.Color(0, 51, 255));
        btn9.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        btn9.setForeground(new java.awt.Color(255, 255, 255));
        btn9.setText("9");
        btn9.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        btn9.setContentAreaFilled(false);
        btn9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn9.setOpaque(true);
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        btn8.setBackground(new java.awt.Color(0, 51, 255));
        btn8.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        btn8.setForeground(new java.awt.Color(255, 255, 255));
        btn8.setText("8");
        btn8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        btn8.setContentAreaFilled(false);
        btn8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn8.setOpaque(true);
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn7.setBackground(new java.awt.Color(0, 51, 255));
        btn7.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        btn7.setForeground(new java.awt.Color(255, 255, 255));
        btn7.setText("7");
        btn7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        btn7.setContentAreaFilled(false);
        btn7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn7.setOpaque(true);
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btn6.setBackground(new java.awt.Color(0, 51, 255));
        btn6.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        btn6.setForeground(new java.awt.Color(255, 255, 255));
        btn6.setText("6");
        btn6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        btn6.setContentAreaFilled(false);
        btn6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn6.setOpaque(true);
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btn5.setBackground(new java.awt.Color(0, 51, 255));
        btn5.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        btn5.setForeground(new java.awt.Color(255, 255, 255));
        btn5.setText("5");
        btn5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        btn5.setContentAreaFilled(false);
        btn5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn5.setOpaque(true);
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btn4.setBackground(new java.awt.Color(0, 51, 255));
        btn4.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        btn4.setForeground(new java.awt.Color(255, 255, 255));
        btn4.setText("4");
        btn4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        btn4.setContentAreaFilled(false);
        btn4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn4.setOpaque(true);
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn3.setBackground(new java.awt.Color(0, 51, 255));
        btn3.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        btn3.setForeground(new java.awt.Color(255, 255, 255));
        btn3.setText("3");
        btn3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        btn3.setContentAreaFilled(false);
        btn3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn3.setOpaque(true);
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn2.setBackground(new java.awt.Color(0, 51, 255));
        btn2.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        btn2.setForeground(new java.awt.Color(255, 255, 255));
        btn2.setText("2");
        btn2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        btn2.setContentAreaFilled(false);
        btn2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn2.setOpaque(true);
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn1.setBackground(new java.awt.Color(0, 0, 255));
        btn1.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        btn1.setForeground(new java.awt.Color(255, 255, 255));
        btn1.setText("1");
        btn1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        btn1.setContentAreaFilled(false);
        btn1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn1.setOpaque(true);
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(btn10, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(btn10, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );

        lblmarks.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(179, 179, 179)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 175, Short.MAX_VALUE)
                .addComponent(lblmarks, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblmarks, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlmain.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 1430, 60));

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        buttonGroup1.add(jRadioButton4);

        buttonGroup1.add(jRadioButton3);

        buttonGroup1.add(jRadioButton2);

        buttonGroup1.add(jRadioButton1);

        lblquestiontag.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        lblquestiontag.setForeground(new java.awt.Color(102, 102, 102));
        lblquestiontag.setText("Question");

        lblquestion.setBackground(new java.awt.Color(255, 255, 255));
        lblquestion.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        lblquestion.setOpaque(true);

        lblnumber.setBackground(new java.awt.Color(255, 255, 255));
        lblnumber.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        lblnumber.setForeground(new java.awt.Color(102, 102, 102));
        lblnumber.setOpaque(true);

        lblselectcorrectanswers.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        lblselectcorrectanswers.setForeground(new java.awt.Color(0, 0, 255));
        lblselectcorrectanswers.setText("Select The Correct Answer");

        lblyouranswer.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        lblyouranswer.setForeground(new java.awt.Color(0, 153, 153));
        lblyouranswer.setText("Your Answer was :");

        lblyouranswer_diplay.setBackground(new java.awt.Color(255, 255, 255));
        lblyouranswer_diplay.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        lblyouranswer_diplay.setForeground(new java.awt.Color(153, 153, 255));
        lblyouranswer_diplay.setOpaque(true);

        lblcorrecranswer_diplay.setBackground(new java.awt.Color(255, 255, 255));
        lblcorrecranswer_diplay.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        lblcorrecranswer_diplay.setForeground(new java.awt.Color(0, 0, 255));
        lblcorrecranswer_diplay.setOpaque(true);

        lblcorrectanswer.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        lblcorrectanswer.setForeground(new java.awt.Color(0, 153, 153));
        lblcorrectanswer.setText("Correct Answer is :");

        lblriviewanswers.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        lblriviewanswers.setForeground(new java.awt.Color(102, 0, 102));
        lblriviewanswers.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblriviewanswers.setText("Review Answers");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(lblquestiontag, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(lblquestion, javax.swing.GroupLayout.PREFERRED_SIZE, 947, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton2)
                            .addComponent(jRadioButton3)
                            .addComponent(jRadioButton4)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(lblcorrectanswer)
                                .addGap(9, 9, 9)
                                .addComponent(lblcorrecranswer_diplay, javax.swing.GroupLayout.PREFERRED_SIZE, 1103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(lblyouranswer)
                                .addGap(11, 11, 11)
                                .addComponent(lblyouranswer_diplay, javax.swing.GroupLayout.PREFERRED_SIZE, 1103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(435, 435, 435)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblriviewanswers, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(lblselectcorrectanswers, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(141, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblriviewanswers, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(lblselectcorrectanswers, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblquestion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblnumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblquestiontag, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jRadioButton1)
                .addGap(37, 37, 37)
                .addComponent(jRadioButton2)
                .addGap(38, 38, 38)
                .addComponent(jRadioButton3)
                .addGap(36, 36, 36)
                .addComponent(jRadioButton4)
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblcorrectanswer)
                    .addComponent(lblcorrecranswer_diplay, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblyouranswer)
                    .addComponent(lblyouranswer_diplay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlmain.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 1430, 440));

        pnlheader.setBackground(new java.awt.Color(53, 53, 167));
        pnlheader.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 0));
        jLabel1.setText("Subject Name");
        pnlheader.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, 130, 36));

        jLabel5.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 0));
        jLabel5.setText("Subject id");
        pnlheader.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 100, 36));

        jLabel6.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 0));
        jLabel6.setText("Exam Id");
        pnlheader.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 0, 80, 36));

        jLabel7.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 0));
        jLabel7.setText("Date");
        pnlheader.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 0, 80, 36));

        jLabel8.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 0));
        jLabel8.setText("Student Id");
        pnlheader.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 0, 150, 36));

        jLabel9.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 0));
        jLabel9.setText("Student Name");
        pnlheader.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 0, 140, 36));

        jLabel11.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("jLabel11");
        pnlheader.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 40, 130, 40));

        jLabel12.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("jLabel11");
        pnlheader.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 50, 40));

        jLabel13.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("jLabel11");
        pnlheader.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, 150, 40));

        lblexid.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        lblexid.setForeground(new java.awt.Color(255, 255, 255));
        lblexid.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblexid.setText("jLabel11");
        pnlheader.add(lblexid, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 40, 70, 40));

        jLabel15.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("jLabel11");
        pnlheader.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 40, 110, 40));

        jLabel16.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("jLabel11");
        pnlheader.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 50, 70, 30));

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/FontAwesome_f00d(0)_48.png"))); // NOI18N
        jButton10.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(52, 52, 182), 2, true));
        jButton10.setBorderPainted(false);
        jButton10.setContentAreaFilled(false);
        jButton10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton10.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/FontAwesome_f00d(0)_48_1.png"))); // NOI18N
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        pnlheader.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1330, 0, 40, 30));

        pnlfooter.setBackground(new java.awt.Color(255, 255, 255));
        pnlfooter.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnfinish.setBackground(new java.awt.Color(255, 255, 255));
        btnfinish.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnfinish.setForeground(new java.awt.Color(0, 0, 204));
        btnfinish.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/FontAwesome_f0f3(0)_64.png"))); // NOI18N
        btnfinish.setText("Finish Exam");
        btnfinish.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 255), 1, true));
        btnfinish.setBorderPainted(false);
        btnfinish.setContentAreaFilled(false);
        btnfinish.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnfinish.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnfinish.setOpaque(true);
        btnfinish.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/FontAwesome_f0f3(0)_64_1.png"))); // NOI18N
        btnfinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfinishActionPerformed(evt);
            }
        });
        pnlfooter.add(btnfinish, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 10, -1, 50));

        btnshowallanswers.setBackground(new java.awt.Color(255, 255, 255));
        btnshowallanswers.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnshowallanswers.setForeground(new java.awt.Color(0, 0, 255));
        btnshowallanswers.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/FontAwesome_f031(0)_64.png"))); // NOI18N
        btnshowallanswers.setText("Show  Answers");
        btnshowallanswers.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 255), 1, true));
        btnshowallanswers.setBorderPainted(false);
        btnshowallanswers.setContentAreaFilled(false);
        btnshowallanswers.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnshowallanswers.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnshowallanswers.setOpaque(true);
        btnshowallanswers.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/FontAwesome_f031(0)_64_1.png"))); // NOI18N
        btnshowallanswers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnshowallanswersActionPerformed(evt);
            }
        });
        pnlfooter.add(btnshowallanswers, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 10, 230, 50));

        btnsubmit.setBackground(new java.awt.Color(255, 255, 255));
        btnsubmit.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnsubmit.setForeground(new java.awt.Color(0, 0, 204));
        btnsubmit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Material Icons_e2c0(0)_64.png"))); // NOI18N
        btnsubmit.setText("Submit");
        btnsubmit.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 255), 1, true));
        btnsubmit.setBorderPainted(false);
        btnsubmit.setContentAreaFilled(false);
        btnsubmit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnsubmit.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnsubmit.setOpaque(true);
        btnsubmit.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/FontAwesome_f0ed(0)_64.png"))); // NOI18N
        btnsubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsubmitActionPerformed(evt);
            }
        });
        pnlfooter.add(btnsubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 10, -1, 50));

        btnSave.setBackground(new java.awt.Color(255, 255, 255));
        btnSave.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnSave.setForeground(new java.awt.Color(0, 0, 204));
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icomoon_e617(0)_48.png"))); // NOI18N
        btnSave.setText("Save Answer");
        btnSave.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 255), 1, true));
        btnSave.setBorderPainted(false);
        btnSave.setContentAreaFilled(false);
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSave.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnSave.setOpaque(true);
        btnSave.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icomoon_e617(0)_48_1.png"))); // NOI18N
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        pnlfooter.add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, 200, 50));

        btnload.setBackground(new java.awt.Color(255, 255, 255));
        btnload.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnload.setForeground(new java.awt.Color(0, 0, 255));
        btnload.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/FontAwesome_f04b(0)_48.png"))); // NOI18N
        btnload.setText("Next Question");
        btnload.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 255), 1, true));
        btnload.setBorderPainted(false);
        btnload.setContentAreaFilled(false);
        btnload.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnload.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnload.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnload.setOpaque(true);
        btnload.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/FontAwesome_f04b(0)_48_1.png"))); // NOI18N
        btnload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnloadActionPerformed(evt);
            }
        });
        pnlfooter.add(btnload, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 240, 60));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlfooter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlheader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlmain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlheader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlmain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlfooter, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
             jRadioButton1.setEnabled(false);
            jRadioButton2.setEnabled(false);
            jRadioButton3.setEnabled(false);
        
        isbuttonselectedSaveButton();
//            if(current>9){
//       btnload.setEnabled(false);
//       }else{
//             btnload.setEnabled(true);
//            }

       
        
        
 if(attemtedQuestion.size()>=10){
       btnload.setVisible(false);
      btnload.setEnabled(false);
      btnSave.setVisible(false);
      btnSave.setEnabled(false);
      btnsubmit.setVisible(true);
      btnsubmit.setEnabled(true);
      
       }
            
        
       
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnloadActionPerformed
      
          jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(true);
            jRadioButton3.setEnabled(true);
         buttonsetvisibletrue(); 
        
        btnload.setText("Next Question");
      
       current++;
       
       timerstart++;
     System.out.println("timerstart   "+timerstart+" cureent   =  "+current);
//       answeredOption();
       
      clearRadioButton();
      // getQuestions();
      
      getRandomQuestionnextbutton();
      // getQuestion();
      
     // getRandomQuestion();
       // answeredOption();
        answeredOptionnextbutton();
       btnSave.setEnabled(true);
       btnSave.setVisible(true);
//       if(current>9){
//       btnload.setEnabled(false);
//       }
       
        //if(((attemtedQuestion.size()==10)&&(current>9))){
        System.out.println("attemtedQuestion.size()   "+attemtedQuestion.size());
             if(attemtedQuestion.size()==10){
          
       btnload.setVisible(false);
      btnload.setEnabled(false);
      btnSave.setVisible(false);
      btnSave.setEnabled(false);
       }
         if(timerstart==1){
              gettimer();
                }
      // gettimer();
      
    }//GEN-LAST:event_btnloadActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
         jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(true);
            jRadioButton3.setEnabled(true);
        
        questionNo = Integer.parseInt(btn1.getText());
         current=questionNo;
        clearRadioButton();
      getRandomQuestion();
        answeredOption();
        
         btnSave.setVisible(true);
         btnSave.setEnabled(true);
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(true);
            jRadioButton3.setEnabled(true);
        
        questionNo = Integer.parseInt(btn2.getText());
         current=questionNo;
        clearRadioButton();
      getRandomQuestion();
        answeredOption();
        
         btnSave.setVisible(true);
         btnSave.setEnabled(true);
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
       jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(true);
            jRadioButton3.setEnabled(true);
        
        questionNo = Integer.parseInt(btn3.getText());
         current=questionNo;
        clearRadioButton();
      getRandomQuestion();
        answeredOption();
        
         btnSave.setVisible(true);
         btnSave.setEnabled(true);
    }//GEN-LAST:event_btn3ActionPerformed

    private void btnfinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfinishActionPerformed
       int marks=count*10;
       String status="";
        if(count>=5){
      status="Pass";
        }else{
        status="Fail";
        }
        ResultDTO result=new ResultDTO();
        result.setExamination(examdto);
        result.setRegistration(regdto);
        result.setPercentage(marks);
        result.setStatus(status);
        try {
           boolean addResult = ManageResultController.addResult(result);
           if(addResult){
           JOptionPane.showMessageDialog(this, "Successfully Result saved");
           }else{
            JOptionPane.showMessageDialog(this, " Result Not saved");
           }
        } catch (Exception ex) {
            Logger.getLogger(StartExamNew.class.getName()).log(Level.SEVERE, null, ex);
        }
        new ResultView(regdto,examdto,status,marks).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnfinishActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
         jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(true);
            jRadioButton3.setEnabled(true);
        
        questionNo = Integer.parseInt(btn6.getText());
         current=questionNo;
        clearRadioButton();
      getRandomQuestion();
        answeredOption();
        
         btnSave.setVisible(true);
         btnSave.setEnabled(true);
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
         jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(true);
            jRadioButton3.setEnabled(true);
        
        questionNo = Integer.parseInt(btn7.getText());
         current=questionNo;
        clearRadioButton();
      getRandomQuestion();
        answeredOption();
        
         btnSave.setVisible(true);
         btnSave.setEnabled(true);
    }//GEN-LAST:event_btn7ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
         jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(true);
            jRadioButton3.setEnabled(true);
        
        questionNo = Integer.parseInt(btn8.getText());
         current=questionNo;
        clearRadioButton();
      getRandomQuestion();
        answeredOption();
        
         btnSave.setVisible(true);
         btnSave.setEnabled(true);
    }//GEN-LAST:event_btn8ActionPerformed

    private void btnshowallanswersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnshowallanswersActionPerformed
            buttonsetvisiblefalse();
            jRadioButton1.setEnabled(false);
            jRadioButton2.setEnabled(false);
            jRadioButton3.setEnabled(false);
            btnSave.setVisible(false);
            btnsubmit.setVisible(false);
             lblquestiontag.setVisible(true);
        lblnumber.setVisible(true);
        lblquestion.setVisible(true);
        lblselectcorrectanswers.setVisible(false);
        btnshowallanswers.setText("Next Answers");
            displayanswer++;
            if(displayanswer<=10){
              getAnswers(displayanswer);
            }else{
            btnshowallanswers.setEnabled(false);
            btnshowallanswers.setVisible(false);
           
            }
             btnfinish.setEnabled(true);
             btnfinish.setVisible(true);
//         lblselectcorrectanswers.setVisible(false);
//        btnshowallanswers.setEnabled(true);
//        btnshowallanswers.setVisible(true); 
//       
    }//GEN-LAST:event_btnshowallanswersActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
          jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(true);
            jRadioButton3.setEnabled(true);
        
        questionNo = Integer.parseInt(btn4.getText());
         current=questionNo;
        clearRadioButton();
      getRandomQuestion();
        answeredOption();
        
         btnSave.setVisible(true);
         btnSave.setEnabled(true);
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
          jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(true);
            jRadioButton3.setEnabled(true);
        
        questionNo = Integer.parseInt(btn5.getText());
         current=questionNo;
        clearRadioButton();
      getRandomQuestion();
        answeredOption();
        
         btnSave.setVisible(true);
         btnSave.setEnabled(true);
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
          jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(true);
            jRadioButton3.setEnabled(true);
        
        questionNo = Integer.parseInt(btn9.getText());
         current=questionNo;
        clearRadioButton();
      getRandomQuestion();
        answeredOption();
        
         btnSave.setVisible(true);
         btnSave.setEnabled(true);
    }//GEN-LAST:event_btn9ActionPerformed

    private void btn10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn10ActionPerformed
         jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(true);
            jRadioButton3.setEnabled(true);
        
        questionNo = Integer.parseInt(btn10.getText());
         current=questionNo;
        clearRadioButton();
      getRandomQuestion();
        answeredOption();
        
         btnSave.setVisible(true);
         btnSave.setEnabled(true);
    }//GEN-LAST:event_btn10ActionPerformed

    private void btnsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsubmitActionPerformed
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Are you sure to Submit All Questions ?", "Submit Answers !", dialogButton);
        if(dialogResult == 0) {
        System.out.println("Yes option");
  
        
        t.stop();
           
             System.out.println("Yes option  222  ");
            submitbuton();
          
            btnsubmit.setVisible(false);
            btnsubmit.setEnabled(false);
            btnshowallanswers.setEnabled(true);
            btnshowallanswers.setVisible(true);
            btnload.setEnabled(false);
            btnload.setVisible(false);
            lblriviewanswers.setVisible(true);
            btnSave.setVisible(false);
} else {
   
     jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(true);
            jRadioButton3.setEnabled(true);
             
             btnSave.setVisible(true);
           // current=questionno;
          //  this.questionNo=questionno;
           
        clearRadioButton();
      getRandomQuestion();
       answeredOption();
        
         btnSave.setVisible(true);
         btnSave.setEnabled(true);
            btnSave.setEnabled(true);
            btnsubmit.setEnabled(true);
             btnload.setEnabled(true);
             btnload.setVisible(true);
    
    
    
  //return;
} 
        
        
        
        
        
        
        
//        int unattempted=0,questionno=0;
//        for ( int i = 1; i <= 10; i++) {
//            boolean contains = attemtedQuestion.contains(i);
//            if(contains){
//                
//            }else{
//                unattempted=1;
//                questionno=i;
//            }
//        }
//        if(unattempted==1){
//             JOptionPane.showMessageDialog(this,"Please click  Question number "+questionno+" and select correct option  ");
//            
//             jRadioButton1.setEnabled(true);
//            jRadioButton2.setEnabled(true);
//            jRadioButton3.setEnabled(true);
//             
//             btnSave.setVisible(true);
//            current=questionno;
//            this.questionNo=questionno;
//           
//        clearRadioButton();
//      getRandomQuestion();
//       answeredOption();
//        
//         btnSave.setVisible(true);
//         btnSave.setEnabled(true);
//            btnSave.setEnabled(true);
//            btnsubmit.setEnabled(true);
//             btnload.setEnabled(true);
//             btnload.setVisible(true);
//            //submitbutonenable();
//        }else{
//          submitbuton();
//         btnsubmit.setVisible(false);
//         btnsubmit.setEnabled(false);
//          btnshowallanswers.setEnabled(true);
//            btnshowallanswers.setVisible(true);
//             btnload.setEnabled(false);
//            btnload.setVisible(false);
//        }
//         lblriviewanswers.setVisible(true);
    }//GEN-LAST:event_btnsubmitActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // new StudentPortal().setVisible(true);
        this.setVisible(false);
        // close();
    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StartExamNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StartExamNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StartExamNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StartExamNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StartExamNew().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btn1;
    public javax.swing.JButton btn10;
    public javax.swing.JButton btn2;
    public javax.swing.JButton btn3;
    public javax.swing.JButton btn4;
    public javax.swing.JButton btn5;
    public javax.swing.JButton btn6;
    public javax.swing.JButton btn7;
    public javax.swing.JButton btn8;
    public javax.swing.JButton btn9;
    public javax.swing.JButton btnSave;
    public javax.swing.JButton btnfinish;
    public javax.swing.JButton btnload;
    public javax.swing.JButton btnshowallanswers;
    public javax.swing.JButton btnsubmit;
    public javax.swing.ButtonGroup buttonGroup1;
    public javax.swing.JButton jButton1;
    public javax.swing.JButton jButton10;
    public javax.swing.JButton jButton2;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel10;
    public javax.swing.JLabel jLabel11;
    public javax.swing.JLabel jLabel12;
    public javax.swing.JLabel jLabel13;
    public javax.swing.JLabel jLabel14;
    public javax.swing.JLabel jLabel15;
    public javax.swing.JLabel jLabel16;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabel7;
    public javax.swing.JLabel jLabel8;
    public javax.swing.JLabel jLabel9;
    public javax.swing.JPanel jPanel6;
    public javax.swing.JPanel jPanel7;
    public javax.swing.JPanel jPanel8;
    public javax.swing.JPanel jPanel9;
    public javax.swing.JRadioButton jRadioButton1;
    public javax.swing.JRadioButton jRadioButton2;
    public javax.swing.JRadioButton jRadioButton3;
    public javax.swing.JRadioButton jRadioButton4;
    public javax.swing.JLabel lblcorrecranswer_diplay;
    public javax.swing.JLabel lblcorrectanswer;
    public javax.swing.JLabel lblexid;
    public javax.swing.JLabel lblmarks;
    public javax.swing.JLabel lblnumber;
    public javax.swing.JLabel lblquestion;
    public javax.swing.JLabel lblquestiontag;
    public javax.swing.JLabel lblriviewanswers;
    public javax.swing.JLabel lblselectcorrectanswers;
    public javax.swing.JLabel lbltimer;
    public javax.swing.JLabel lblyouranswer;
    public javax.swing.JLabel lblyouranswer_diplay;
    public javax.swing.JPanel pnlfooter;
    public javax.swing.JPanel pnlheader;
    public javax.swing.JPanel pnlmain;
    // End of variables declaration//GEN-END:variables
        
    
    private void loadQuestions(){
        try {
          int count1,count=0;
            List<QuestionDTO> allQuestions = ManageQuestionController.getAllQuestions();
            for (QuestionDTO allQuestion : allQuestions) {
              if((allQuestion.getSubjectsDTO().getSubid()==id)){
                  String question = allQuestion.getQuestion();
                  count++;
                   hashMap.put(count, allQuestion);
              }else if((allQuestion.getSubjectsDTO().getSubid()==2&&id==2)){
                  String question = allQuestion.getQuestion();
              }
            }
        } catch (Exception ex) {
            Logger.getLogger(StartExamNew.class.getName()).log(Level.SEVERE, null, ex);
        } 
        }
    
      private void getRandomQuestion(){
    // int questionNo = Integer.parseInt(btn1.getText());
        QuestionDTO question = hashMap.get(questionNo);
        if (question != null) {
            clearRadioButton();
                  lblnumber.setText(Integer.toString(questionNo));
                  lblquestion.setText(question.getQuestion());
                  jRadioButton1.setText(question.getOption1());
                  jRadioButton2.setText(question.getOption2());
                  jRadioButton3.setText(question.getOption3());
                  jRadioButton4.setText(question.getAnswers());
        } else {
            // Key might be present...
            if (hashMap.containsKey(questionNo)) {
               // Okay, there's a key but the value is null
            } else {
               // Definitely no such key
            }
        }
    }
      private void getRandomQuestionnextbutton(){
          
          if(current>10){
                     current=1;
                 }
    // int questionNo = Integer.parseInt(btn1.getText());
        QuestionDTO question = hashMap.get(current);
        if (question != null) {
            clearRadioButton();
                  lblnumber.setText(Integer.toString(current));
                  lblquestion.setText(question.getQuestion());
                  jRadioButton1.setText(question.getOption1());
                  jRadioButton2.setText(question.getOption2());
                  jRadioButton3.setText(question.getOption3());
                  jRadioButton4.setText(question.getAnswers());
        } else {
            // Key might be present...
            if (hashMap.containsKey(questionNo)) {
               // Okay, there's a key but the value is null
            } else {
               // Definitely no such key
            }
        }
    }
      
      
      
      
      
      
        
        private  void getQuestion(){
           
            if(current>10){
            current=1;
            }
        
             QuestionDTO question = hashMap.get(current);
        if (question != null) {
            clearRadioButton();
            
            
            lblnumber.setText(Integer.toString(current));
                 // lblnumber.setText(Integer.toString(questionNo));
                  lblquestion.setText(question.getQuestion());
                  jRadioButton1.setText(question.getOption1());
                  jRadioButton2.setText(question.getOption2());
                  jRadioButton3.setText(question.getOption3());
                  jRadioButton4.setText(question.getAnswers());
                  
                 
                  if(currentanswer>=0){
                   
                  markedAnswers();
                //int markedAnswers1 = getmarkedAnswers();
                int markedAnswersnextbutton = getmarkedAnswersnextbutton();
                     
             
                 switch(markedAnswersnextbutton){
                    
                     case 1:jRadioButton1.setSelected(true);
                     
                     break;
                     case 2:jRadioButton2.setSelected(true);
                    
                     break;
                     case 3:jRadioButton3.setSelected(true);
                   
                     break;
                     
                     case 4:jRadioButton4.setSelected(true);
                    
                     break;
                     default:jRadioButton4.setSelected(true);
                     
                 }
                 }
        } else {
            
            jRadioButton4.setSelected(true);
            if (hashMap.containsKey(questionNo)) {
               // Okay, there's a key but the value is null
            } else {
               // Definitely no such key
            }
          }
        }
        private boolean check(){
            String tex="";
            if(jRadioButton1.isSelected()){
            tex=jRadioButton1.getText();
            }else if(jRadioButton2.isSelected()){
             tex=jRadioButton2.getText();
            }else if(jRadioButton3.isSelected()){
             tex=jRadioButton3.getText();
            }else{
            tex="";
            }
            
        QuestionDTO question = hashMap.get(current);
           String answers = question.getAnswers();
            if(question!=null){
               
                if(current==current){
                     if(answers.equals(tex) ){
                  return  true;
                  }
                return false;
            }
          }
           return false;
        }        
    private void clearRadioButton(){
        jRadioButton1.setVisible(false);
        jRadioButton2.setVisible(false);
        jRadioButton3.setVisible(false);
        jRadioButton1.setVisible(true);
        jRadioButton2.setVisible(true);
        jRadioButton3.setVisible(true);
        jRadioButton1.setSelected(false);     
        jRadioButton2.setSelected(false);
        jRadioButton3.setSelected(false);
        }
    private void getAnswers(int questionno){
        clearRadioButton();
         QuestionDTO question = hashMap.get(questionno);
       // QuestionDTO question = queQuestion1.poll();
            if(question!=null){
                clearRadioButton();
         
          lblquestion.setText(question.getQuestion());
          jRadioButton1.setText(question.getOption1());
          jRadioButton2.setText(question.getOption2());
          jRadioButton3.setText(question.getOption3());
          jRadioButton4.setText(question.getAnswers());
          lblcorrectanswer.setVisible(true);
          lblcorrecranswer_diplay.setText(jRadioButton4.getText());
          lblyouranswer.setVisible(true);
          lblnumber.setText(Integer.toString(questionno));
          String studentanswer = hashMapstudentanswers.get(displayanswer);
           lblyouranswer_diplay.setText(studentanswer);
            }else{
            return;
            }
    }
  
    private void markedAnswers(){
        studentanswer="";
        boolean selected=false;
        if(jRadioButton1.isSelected()){
        markedAnswers=1;
        studentanswer=jRadioButton1.getText();
        selected=true;
        }else if(jRadioButton2.isSelected()){
         markedAnswers=2;
         studentanswer=jRadioButton2.getText();
          selected=true;
        }else if(jRadioButton3.isSelected()){
         markedAnswers=3;
         studentanswer=jRadioButton3.getText();
          selected=true;
        }else{
        markedAnswers=4;
        }
       hashMapmarkedAnswers.put(current, markedAnswers);
            JButton jb[]=new JButton[10];
            jb[0]=btn1;
            jb[1]=btn2;
            jb[2]=btn3;
            jb[3]=btn4;
            jb[4]=btn5;
            jb[5]=btn6;
            jb[6]=btn7;
            jb[7]=btn8;
            jb[8]=btn9;
            jb[9]=btn10;
       if(selected){
           for (int i = 0; i <=jb.length; i++) {
               if(i+1==current){
               jb[i].setBackground(Color.GREEN);
               //jb[i].setForeground(Color.BLACK);
               }
           }
     }
   }
    private int getmarkedAnswers(){
         int jbuttonvalue=0;
        Integer markedJbutton = hashMapmarkedAnswers.get(questionNo);
        if (markedJbutton != null) {
          switch(markedJbutton){
              case 1:jbuttonvalue= 1;break;
              case 2:jbuttonvalue= 2;break;
              case 3:jbuttonvalue= 3;break;
              case 4:jbuttonvalue= 4;break;
              default:jbuttonvalue= 4;
          }
        } else {
           
            jbuttonvalue=4;
            
            if (hashMap.containsKey(questionNo)) {
               // Okay, there's a key but the value is null
            } else {
               // Definitely no such key
            }
        }
        return jbuttonvalue;
    }
    
     private int getmarkedAnswersnextbutton(){
         int jbuttonvalue=0;
        Integer markedJbutton = hashMapmarkedAnswers.get(current);
        if (markedJbutton != null) {
          switch(markedJbutton){
              case 1:jbuttonvalue= 1;break;
              case 2:jbuttonvalue= 2;break;
              case 3:jbuttonvalue= 3;break;
              case 4:jbuttonvalue= 4;break;
              default:jbuttonvalue= 4;
          }
        } else {
            
            jbuttonvalue=4;
            
            if (hashMap.containsKey(current)) {
               // Okay, there's a key but the value is null
            } else {
               // Definitely no such key
            }
        }
        return jbuttonvalue;
    }
    
    
    
    
     private  void getQuestions(){
        
                 if(current>10){
                     current=1;
                 }
             QuestionDTO question = hashMap.get(current);
        if (question != null) {
            clearRadioButton();
                  lblnumber.setText(Integer.toString(current));
                  lblquestion.setText(question.getQuestion());
                  jRadioButton1.setText(question.getOption1());
                  jRadioButton2.setText(question.getOption2());
                  jRadioButton3.setText(question.getOption3());
                  jRadioButton4.setText(question.getAnswers());
                   jRadioButton4.setSelected(true);
                 }else {
            // Key might be present...
            if (hashMap.containsKey(questionNo)) {
               // Okay, there's a key but the value is null
            } else {
               // Definitely no such key
            }
          }
        }
       private void answeredOptionnextbutton(){
        // markedAnswers();
        int markedAnswers1 = getmarkedAnswersnextbutton();
        
        switch(markedAnswers1){
       case 1:jRadioButton1.setSelected(true);break;
       case 2:jRadioButton2.setSelected(true);break;
       case 3:jRadioButton3.setSelected(true);break;
       case 4:jRadioButton4.setSelected(true);
       default:return;
      }
     }
     
     
     
     
     
     
     
     private void answeredOption(){
        // markedAnswers();
        int markedAnswers1 = getmarkedAnswers();
        
        switch(markedAnswers1){
       case 1:jRadioButton1.setSelected(true);break;
       case 2:jRadioButton2.setSelected(true);break;
       case 3:jRadioButton3.setSelected(true);break;
       case 4:jRadioButton4.setSelected(true);
       default:return;
      }
     }
     
     private void buttonsetvisiblefalse(){
        btn1.setVisible(false);
        btn2.setVisible(false);
        btn3.setVisible(false);
        btn4.setVisible(false);
        btn5.setVisible(false);
        btn6.setVisible(false);
        btn7.setVisible(false);
        btn8.setVisible(false);
        btn9.setVisible(false);
        btn10.setVisible(false); 
      lblquestiontag.setVisible(false);
        lblselectcorrectanswers.setVisible(false);
        btnfinish.setVisible(false);
        btnfinish.setEnabled(false);
     }
     
     private void buttonsetvisibletrue(){
        btn1.setVisible(true);
        btn2.setVisible(true);
        btn3.setVisible(true);
        btn4.setVisible(true);
        btn5.setVisible(true);
        btn6.setVisible(true);
        btn7.setVisible(true);
        btn8.setVisible(true);
        btn9.setVisible(true);
        btn10.setVisible(true); 
        lblquestiontag.setVisible(true);
        lblselectcorrectanswers.setVisible(true);
         btnfinish.setVisible(true);
        btnfinish.setEnabled(true);
     }
    
    
      private void submitbuton(){
       lblquestiontag.setVisible(false);
       lblnumber.setVisible(false);
       lblquestion.setVisible(false);
        btn1.setVisible(false);
        btn2.setVisible(false);
        btn3.setVisible(false);
        btn4.setVisible(false);
        btn5.setVisible(false);
        btn6.setVisible(false);
        btn7.setVisible(false);
        btn8.setVisible(false);
        btn9.setVisible(false);
        btn10.setVisible(false); 
        jPanel6.setVisible(false);
        jRadioButton1.setVisible(false);
       jRadioButton2.setVisible(false);
       jRadioButton3.setVisible(false);
       lblselectcorrectanswers.setVisible(false);
        btnshowallanswers.setEnabled(true);
        btnshowallanswers.setVisible(true); 
               
     }
       private void submitbutonenable(){
       lblquestiontag.setVisible(true);
       lblnumber.setVisible(true);
       lblquestion.setVisible(true);
        btn1.setVisible(true);
        btn2.setVisible(true);
        btn3.setVisible(true);
        btn4.setVisible(true);
        btn5.setVisible(true);
        btn6.setVisible(true);
        btn7.setVisible(true);
        btn8.setVisible(true);
        btn9.setVisible(true);
        btn10.setVisible(true); 
        jRadioButton1.setVisible(true);
       jRadioButton2.setVisible(true);
       jRadioButton3.setVisible(true);
       lblselectcorrectanswers.setVisible(true);
        btnshowallanswers.setEnabled(true);
        btnshowallanswers.setVisible(true); 
               
     }
       private void loadfields(){
       
   jLabel15.setText(examdto.getDate());
     lblexid.setText(Integer.toString(examdto.getEid()));
    jLabel16.setText(Integer.toString(regdto.getRegid()));
    jLabel11.setText(regdto.getFname());
   jLabel13.setText(examdto.getSubjectsDTO().getSubjectname());
       
       
       }
       
       private void isbuttonselectedSaveButton(){
           
        
       if(!(jRadioButton1.isSelected()|| jRadioButton2.isSelected()|| jRadioButton3.isSelected())){
           
//           System.out.println("jRadioButton1.isSelected() "+jRadioButton1.isSelected());
//            System.out.println("jRadioButton1   "+(jRadioButton1.isSelected()|| jRadioButton2.isSelected()|| jRadioButton2.isSelected()));
     JOptionPane.showMessageDialog(this,"Please Select the Correct Option !!! ");
     
            //
            jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(true);
            jRadioButton3.setEnabled(true);
     }else{
           int size = attemtedQuestion.size();
            String question_number = lblnumber.getText();
           attemtedQuestion.contains(question_number);
          
           //  if(size==10){
       if(Integer.parseInt(question_number)>=10){
           //  btnload.setVisible(false); 
          //  btnload.setEnabled(false);
              btnsubmit.setVisible(true);
                btnsubmit.setEnabled(true);
               btnSave.setEnabled(false);
               btnSave.setVisible(false);
               btnload.setVisible(false);
               btnSave.setEnabled(false);
        }
        //first Attempt
        
        
      if(!attemtedQuestion.contains(question_number)){
         // System.out.println(" not attemted");
          if(check()){
              correctanswer.add(question_number);
               // System.out.println("  not attemted + correct");
            count=count+1;
            
          }else{
             //  System.out.println("  not attemted + wrong");
               wronganswer.add(question_number);
             count=count;
          }
          //second attemt
      }else{
           //System.out.println("  attemted");
            if(check()){
                // System.out.println("   attemted + correct");
                    if(correctanswer.contains(question_number)){
                        // System.out.println("   attemted +first- correct+ second- correct");
                          count=count;
                    }else{
                          wronganswer.remove(question_number);
                          correctanswer.add(question_number);
                         // System.out.println("   attemted + first-wrong+ second -correct");
                          count=count+1;
                    }
            }else{
                // System.out.println("   attemted + wrong");
                if(wronganswer.contains(question_number)){
               //  System.out.println("   attemted +first- wrong+ second- wrong");
                 count=count;
                }else{
                // System.out.println("   attemted +first- correct+ second- wrong");
                correctanswer.remove(question_number);
                wronganswer.add(question_number);
                 count=count-1;
                }
           }
      }
            markedAnswers();
           attemtedQuestion.contains(question_number);
            attemtedQuestion.add(question_number);
           attemtedQuestion.contains(question_number);
           int size1 = attemtedQuestion.size();
           jRadioButton4.setSelected(true);   
            lblmarks.setText(Integer.toString(count));
            btnSave.setEnabled(false);
            btnSave.setVisible(false);
            hashMapstudentanswers.put(Integer.parseInt(question_number), studentanswer);
            //String studentanswer = hashMapstudentanswers.get(Integer.parseInt(question_number));
            }
       }
//      private void startTimer(){
//     t=new Timer(1000, (ActionEvent ae) -> {
//                 seconds--;
//                 if(seconds<=0){
//                     minute--;
//                     seconds=60;
//                 }
//                 if(seconds<=0 && minute<=0){
//                     hour--;
//                     minute=60;
//                     seconds=60;
//                 }
////                 txtseconds.setText(Integer.toString(seconds));
////                 txtminute.setText(Integer.toString(minute));
////                 txthour.setText(Integer.toString(hour));
//                 jLabel10.setText(Integer.toString(hour)+":"+Integer.toString(minute)+":"+Integer.toString(seconds));
//             
//     });t.start();
//    }
      

      private void gettimer(){
      // time= 60 * 1000; //10 seconds,
      t = new Timer(1000, new ActionListener() {
            long time= 300 * 1000; //10 seconds,
                public void actionPerformed(ActionEvent e) {
                    if (time >= 0) {
                        long s = ((time / 1000) % 60);
                        long m = (((time / 1000) / 60) % 60);
                       // long h = ((((time / 1000) / 60) / 60) % 60);
                       // jLabel10.setText(h + " h : " + m + " m :" + s + " s ");
                       lbltimer.setText( m + " minutes :" + s + " seconds ");
                        time -= 1000;
                        if(time==0){
                        timeOver();
                        }
                    }
                }
            });
            t.start();
      }
      
   private void timeOver(){
      
       JOptionPane.showMessageDialog(this, "Times is up   !!! ");
      submitbuton();
         btnsubmit.setVisible(false);
         btnsubmit.setEnabled(false);
         btnshowallanswers.setEnabled(true);
         btnshowallanswers.setVisible(true);
         btnload.setEnabled(false);
        btnload.setVisible(false);
         lblriviewanswers.setVisible(true);
         btnSave.setVisible(false);
      }
}
